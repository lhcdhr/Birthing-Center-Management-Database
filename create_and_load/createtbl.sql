-- Include your create table DDL statements in this file.
-- Make sure to terminate each statement with a semicolon (;)

-- LEAVE this statement on. It is required to connect to your database.
CONNECT TO cs421;

-- Remember to put the create table ddls for the tables with foreign key references
--    ONLY AFTER the parent tables has already been created.

-- This is only an example of how you add create table ddls to this file.
--   You may remove it.
CREATE TABLE Mothers(
    QHCid VARCHAR(12) PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL,
    date_of_birth DATE NOT NULL,
    address VARCHAR(50) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(30) NOT NULL,
    profession VARCHAR(30) NOT NULL,
    bloodtype VARCHAR(2)
);

CREATE TABLE Fathers(
    fid VARCHAR(20) PRIMARY KEY NOT NULL,
    QHCid VARCHAR(12),
    name VARCHAR(30) NOT NULL,
    date_of_birth DATE NOT NULL,
    address VARCHAR(50),
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(30),
    profession VARCHAR(30) NOT NULL,
    bloodtype VARCHAR(2)
);

CREATE TABLE Couples(
    -- GENERATED BY DEFAULT AS IDENTITY
    cid VARCHAR(20) PRIMARY KEY NOT NULL,
    times_of_pregnancy INTEGER NOT NULL,
    mother_QHCid VARCHAR(12) NOT NULL,
    father_id VARCHAR(20),
    FOREIGN KEY (mother_QHCid) REFERENCES Mothers,
    FOREIGN KEY (father_id) REFERENCES Fathers
);

CREATE TABLE Healthcare_Institutions(
    email VARCHAR(30) PRIMARY KEY NOT NULL,
    name VARCHAR(50) NOT NULL,
    address VARCHAR(50) NOT NULL,
    website VARCHAR(50) NOT NULL
);

CREATE TABLE Community_Clinics(
    email VARCHAR(30) PRIMARY KEY NOT NULL,
    FOREIGN KEY (email) REFERENCES Healthcare_Institutions
    );

CREATE TABLE Birthing_Centers(
    email VARCHAR(30) PRIMARY KEY NOT NULL,
    FOREIGN KEY (email) REFERENCES Healthcare_Institutions
);

CREATE TABLE Midwives(
    practitioner_id VARCHAR(12) PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL,
    email VARCHAR(30) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    associated_institution_email VARCHAR(30) NOT NULL,
    FOREIGN KEY (associated_institution_email) REFERENCES Healthcare_Institutions
);

CREATE TABLE Pregnancies(
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    num_babies INTEGER,
    birthing_address VARCHAR(50),
    expected_time_frame DATE,
    final_expected_due DATE,
    practitioner_id VARCHAR(12),
    backup_practitioner_id VARCHAR(12),
    PRIMARY KEY (cid, nth_pregnancy),
    FOREIGN KEY (cid) REFERENCES Couples,
    FOREIGN KEY (practitioner_id) REFERENCES Midwives,
    FOREIGN KEY (backup_practitioner_id) REFERENCES Midwives
);

CREATE TABLE Babies(
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    nth_baby INTEGER NOT NULL,
    gender VARCHAR(1) NOT NULL,
    bloodtype VARCHAR(2),
    date_of_birth DATE,
    time_of_birth TIME,
    name VARCHAR(20),
    PRIMARY KEY (cid, nth_pregnancy, nth_baby),
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);

CREATE TABLE Info_Sessions(
    practitioner_id VARCHAR(12) NOT NULL,
    inf_date DATE NOT NULL,
    inf_time TIME NOT NULL,
    language VARCHAR(20) NOT NULL,
    PRIMARY KEY (practitioner_id, inf_date, inf_time),
    FOREIGN KEY (practitioner_id) REFERENCES Midwives
);

CREATE TABLE invites(
    practitioner_id VARCHAR(12) NOT NULL,
    inf_date DATE NOT NULL,
    inf_time TIME NOT NULL,
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    FOREIGN KEY (practitioner_id, inf_date, inf_time) REFERENCES Info_Sessions,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);

CREATE TABLE registers(
    practitioner_id VARCHAR(12) NOT NULL,
    inf_date DATE NOT NULL,
    inf_time TIME NOT NULL,
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    FOREIGN KEY (practitioner_id, inf_date, inf_time) REFERENCES Info_Sessions,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);

CREATE TABLE attends(
    practitioner_id VARCHAR(12) NOT NULL,
    inf_date DATE NOT NULL,
    inf_time TIME NOT NULL,
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    FOREIGN KEY (practitioner_id, inf_date, inf_time) REFERENCES Info_Sessions,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);

CREATE TABLE Appointments(
    practitioner_id VARCHAR(12) NOT NULL,
    app_date DATE NOT NULL,
    app_time TIME NOT NULL,
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    PRIMARY KEY (practitioner_id, app_date, app_time),
    FOREIGN KEY (practitioner_id) REFERENCES Midwives,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);

CREATE TABLE Notes(
    practitioner_id VARCHAR(12) NOT NULL,
    app_date DATE NOT NULL,
    app_time TIME NOT NULL,
    n_time TIME NOT NULL,
    date DATE NOT NULL,
    contents VARCHAR(200) NOT NULL,
    PRIMARY KEY (practitioner_id, app_date, app_time, n_time),
    FOREIGN KEY (practitioner_id, app_date, app_time) REFERENCES Appointments
);

CREATE TABLE Technicians(
    tech_id VARCHAR(12) NOT NULL,
    name VARCHAR(20) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    PRIMARY KEY (tech_id)
);

CREATE TABLE Tests(
    tid VARCHAR(12) NOT NULL,
    type VARCHAR(20) NOT NULL,
    sample_date DATE,
    testee VARCHAR(20) NOT NULL,
    conduct_date DATE NOT NULL,
    result VARCHAR(50) NOT NULL,
    practitioner_id VARCHAR(12) NOT NULL,
    prescribe_date DATE NOT NULL,
    tech_id VARCHAR(12),
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    PRIMARY KEY (tid),
    FOREIGN KEY (practitioner_id) REFERENCES Midwives,
    FOREIGN KEY (tech_id) REFERENCES Technicians,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies,
    CONSTRAINT datecheck CHECK(conduct_date >= prescribe_date AND sample_date>= prescribe_date)
);

CREATE TABLE Dating_Ultrasounds(
    tid VARCHAR(12) NOT NULL,
    expected_due DATE NOT NULL,
    PRIMARY KEY(tid),
    FOREIGN KEY (tid) REFERENCES Tests
);

CREATE TABLE estimates(
    practitioner_id VARCHAR(12) NOT NULL,
    cid VARCHAR(20) NOT NULL,
    nth_pregnancy INTEGER NOT NULL,
    last_menstrual DATE NOT NULL,
    expected_due DATE NOT NULL,
    FOREIGN KEY (practitioner_id) REFERENCES Midwives,
    FOREIGN KEY (cid, nth_pregnancy) REFERENCES Pregnancies
);


